<Activity mc:Ignorable="sap sap2010 sads" x:Class="TruBotDesigner.Workflow" sap2010:WorkflowViewState.IdRef="TruBotDesigner.Workflow_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:snm="clr-namespace:System.Net.Mail;assembly=System"
 xmlns:tca="clr-namespace:TruBot.Core.Activities;assembly=TruBot.Core.Activities"
 xmlns:te="clr-namespace:TruBot.Excel;assembly=TruBot.Excel"
 xmlns:tea="clr-namespace:TruBot.Email.Activities;assembly=TruBot.Email.Activities"
 xmlns:tea1="clr-namespace:TruBot.Excel.Activities;assembly=TruBot.Excel.Activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>WorkflowExecutorExtensions</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>Microsoft.Office.Interop.Excel</x:String>
      <x:String>TruBot.Excel</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>TruBotExecutor</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.ServiceProcess</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>TruBot.Cryptography</AssemblyReference>
      <AssemblyReference>TruBot.Email</AssemblyReference>
      <AssemblyReference>TruBot.FTP.Activities</AssemblyReference>
      <AssemblyReference>TruBot.PDF</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>DevExpress.Printing.v20.1.Core</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>TruBot.Excel</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="emails" />
      <Variable x:TypeArguments="snm:MailMessage" Name="currentEmail" />
      <Variable x:TypeArguments="x:Int32" Name="emailindex" />
      <Variable x:TypeArguments="sd:DataTable" Name="feedbackDataTable" />
    </Flowchart.Variables>
    <Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_2">
        <tea:GetImapMail Count="30" DeleteOnRead="False" DisplayName="Get IMAP Mail" Email="shivgamerz999@gmail.com" EnableSSL="True" sap2010:WorkflowViewState.IdRef="GetImapMail_1" MailFolder="Inbox" MarkAsRead="False" MessageList="[emails]" OnlyUnread="True" Password="maew xszm vntl hvjo" Pause="True" Port="993" SecureConnection="Auto" Server="imap.gmail.com" TimeoutMS="30000" />
        <FlowStep.Next>
          <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_3">
            <tca:CreateDataTable DataTable="[feedbackDataTable]" DataTableWizard="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Customer_x0020_Name&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Order_x0020_ID&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Feedback_x0020_Category&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Sentiment_x0020_Score&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" DisplayName="Create DataTable" sap2010:WorkflowViewState.IdRef="CreateDataTable_2" Pause="True" />
            <FlowStep.Next>
              <FlowStep x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_1">
                <tca:ForEach x:TypeArguments="snm:MailMessage" DisplayName="For Each" ElementIndex="[emailindex]" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Pause="True" Values="[emails]">
                  <tca:ForEach.Body>
                    <ActivityAction x:TypeArguments="snm:MailMessage">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="snm:MailMessage" Name="currentEmail" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_1">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="customerName" />
                        </Sequence.Variables>
                        <If Condition="[currentEmail.Subject.ToLower().Contains(&quot;feedback&quot;)]" sap2010:WorkflowViewState.IdRef="If_1">
                          <If.Then>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_3">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="orderID" />
                                <Variable x:TypeArguments="x:String" Name="feedbackCategory" />
                                <Variable x:TypeArguments="x:Int32" Name="sentimentScore" />
                                <Variable x:TypeArguments="te:WorkbookApplication" Name="excelApp" />
                                <Variable x:TypeArguments="x:String" Name="responseMessage" />
                              </Sequence.Variables>
                              <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[customerName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(currentEmail.Body, "Name:\s([A-Za-z\s]+)").Groups(1).Value]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[orderID]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(currentEmail.Body, "Order ID: (\d+)").Groups(1).Value]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap2010:WorkflowViewState.IdRef="Assign_3">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[feedbackCategory]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String" xml:space="preserve">[If(currentEmail.Body.ToLower().Contains("product"), "product", 
                 If(currentEmail.Body.ToLower().Contains("delivery"), "delivery", 
                 If(currentEmail.Body.ToLower().Contains("service"), "service", "other")))]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap2010:WorkflowViewState.IdRef="Assign_4">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[sentimentScore]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(System.Text.RegularExpressions.Regex.Match(currentEmail.Body, "\b[1-5]\b").Value)]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[responseMessage]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[If(sentimentScore = 5 OrElse sentimentScore = 4, "Positive feedback!", If(sentimentScore = 3, "Neutral Feedback", "Negative Feedback"))]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <tea1:UsingExcelScope Password="{x:Null}" DisplayName="Using Excel Scope" FilePath="C:\Users\shivg\OneDrive\Desktop\Customer_Feedback.xlsx" sap2010:WorkflowViewState.IdRef="UsingExcelScope_1" Pause="True" Workbook="[excelApp]">
                                <tea1:UsingExcelScope.WorkbookBody>
                                  <ActivityAction x:TypeArguments="te:WorkbookApplication">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="te:WorkbookApplication" Name="ExcelWorkbookScope" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_2">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="sd:DataRow" Name="newRow" />
                                        <Variable x:TypeArguments="x:String" Name="g" />
                                        <Variable x:TypeArguments="sd:DataTable" Name="existingDataTable" />
                                        <Variable x:TypeArguments="x:Int32" Name="lastRowIndex" />
                                        <Variable x:TypeArguments="x:Boolean" Name="isOrderIDPresent" />
                                        <Variable x:TypeArguments="sd:DataRow" Name="currentRow" />
                                      </Sequence.Variables>
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_5">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="sd:DataRow">[newRow]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="sd:DataRow">[feedbackDataTable.NewRow()]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_6">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Object">[newRow("Customer Name")]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Object">[customerName]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Object">[newRow("Order ID")]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Object">[orderID]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_8">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Object">[newRow("Feedback Category")]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Object">[feedbackCategory]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_9">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Object">[newRow("Sentiment Score")]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Object">[sentimentScore]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_12">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Boolean">[isOrderIDPresent]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <tca:ForEach x:TypeArguments="sd:DataRow" ElementIndex="{x:Null}" DisplayName="For Each" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Pause="True" Values="[feedbackDataTable.Rows]">
                                        <tca:ForEach.Body>
                                          <ActivityAction x:TypeArguments="sd:DataRow">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="currentRow" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_4">
                                              <If Condition="[currentRow(&quot;Order ID&quot;).ToString() = OrderID]" sap2010:WorkflowViewState.IdRef="If_2">
                                                <If.Then>
                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_13">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">[isOrderIDPresent]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </If.Then>
                                              </If>
                                              <tca:BookmarkBreak DisplayName="Break" sap2010:WorkflowViewState.IdRef="BookmarkBreak_3" />
                                            </Sequence>
                                          </ActivityAction>
                                        </tca:ForEach.Body>
                                      </tca:ForEach>
                                      <If Condition="[isOrderIDPresent = False]" sap2010:WorkflowViewState.IdRef="If_3">
                                        <If.Then>
                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_5">
                                            <Sequence.Variables>
                                              <Variable x:TypeArguments="x:String" Name="customerEmail" />
                                              <Variable x:TypeArguments="x:String" Name="currentSentiment" />
                                              <Variable x:TypeArguments="x:Boolean" Name="sentimentfound" />
                                              <Variable x:TypeArguments="sd:DataRow" Name="new1Row" />
                                              <Variable x:TypeArguments="sd:DataRow" Name="row" />
                                            </Sequence.Variables>
                                            <tca:AddRow RowCollection="{x:Null}" DataTable="[feedbackDataTable]" DisplayName="Add Row" sap2010:WorkflowViewState.IdRef="AddRow_1" Pause="True" Row="[newRow]" />
                                            <tea1:ReadRange FormatResult="{x:Null}" DataTable="[existingDataTable]" DisplayName="Read Range" Headers="True" sap2010:WorkflowViewState.IdRef="ReadRange_1" Pause="True" SheetName="Feedback_Data">
                                              <tea1:ReadRange.Range>
                                                <InArgument x:TypeArguments="x:String">
                                                  <Literal x:TypeArguments="x:String" Value="" />
                                                </InArgument>
                                              </tea1:ReadRange.Range>
                                            </tea1:ReadRange>
                                            <tea1:WriteRange FormatResult="{x:Null}" CellAddress="A1" DataTable="[feedbackDataTable]" DisplayName="Write Range" Headers="True" sap2010:WorkflowViewState.IdRef="WriteRange_2" Pause="True" SheetName="Feedback_Data" />
                                            <tea1:WriteRange FormatResult="{x:Null}" CellAddress="[&quot;A&quot; + (lastRowIndex + 2).ToString()]" DataTable="[feedbackDataTable]" DisplayName="Write Range" Headers="False" sap2010:WorkflowViewState.IdRef="WriteRange_1" Pause="True" SheetName="Feedback_Data" />
                                            <tea:SendSMTPMail Attachments="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" From="{x:Null}" MailMessage="{x:Null}" Result="{x:Null}" SenderName="{x:Null}" Body="[&quot;Customer Feedback Summary&quot; &amp; Environment.NewLine &amp; _&#xA;&quot;Name: &quot; &amp; customerName &amp; Environment.NewLine &amp; _&#xA;&quot;Order ID: &quot; &amp; orderID &amp; Environment.NewLine &amp; _&#xA;&quot;Feedback Category: &quot; &amp; feedbackCategory &amp; Environment.NewLine &amp; _&#xA;&quot;Sentiment Score: &quot; &amp; sentimentScore.ToString() &amp; Environment.NewLine &amp; _&#xA;&quot;Sentiment:&quot; &amp; responseMessage]" DisplayName="Send SMTP Mail" Email="shivkush512@gmail.com" EnableSSL="True" HtmlFlag="False" sap2010:WorkflowViewState.IdRef="SendSMTPMail_2" Password="mqzf uidz zagv dlxk" Pause="True" Port="587" SecureConnection="Auto" Server="smtp.gmail.com" Subject="Customer Feedback Summary" TimeoutMS="30000" To="shivkush512@gmail.com">
                                              <tea:SendSMTPMail.Files>
                                                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                              </tea:SendSMTPMail.Files>
                                              <tea:SendSMTPMail._Attachments>
                                                <scg:List x:TypeArguments="x:String" Capacity="0" />
                                              </tea:SendSMTPMail._Attachments>
                                            </tea:SendSMTPMail>
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <tca:BookmarkBreak DisplayName="Break" sap2010:WorkflowViewState.IdRef="BookmarkBreak_4" />
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                  </ActivityAction>
                                </tea1:UsingExcelScope.WorkbookBody>
                              </tea1:UsingExcelScope>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <tca:BookmarkBreak DisplayName="Break" sap2010:WorkflowViewState.IdRef="BookmarkBreak_2" />
                          </If.Else>
                        </If>
                      </Sequence>
                    </ActivityAction>
                  </tca:ForEach.Body>
                </tca:ForEach>
              </FlowStep>
            </FlowStep.Next>
          </FlowStep>
        </FlowStep.Next>
      </FlowStep>
    </Flowchart.StartNode>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <sads:DebugSymbol.Symbol>dzNDOlxVc2Vyc1xzaGl2Z1xUcnVCb3RcRmluYWwgYXV0b21hdGlvblxEZWZhdWx0LnhhbWxdOAOWAg8CAQFBCUGBAwIBdkQNRLMMAgFzRxGLAh8CAQJB6QFB8wECAX5B9wJB/gICAX1BXEF1AgF8QSBBJAIBe0G3AkG8AgIBekHcAkHsAgIBeUGPAkGkAgIBeEHCAUHJAQIBd0QsREECAXRHtQFHvwECAXFHZEdyAgFvTReIAiICAQNRGYcCHgIBBFEnUWgCAQVTHYICKAIBCIUCHYUCeAIBB1sfYigCAWpjH2ooAgFlax90KAIBXnUffCgCAVp9H4QBKAIBU4UBH4ECNgIBCWBKYLEBAgFtXUtdWQIBa2hKaKwBAgFoZUtlVAIBZm1LbV0CAV96SXqsAQIBXXdKd1oCAVuCAUqCAdMBAgFWf0t/XAIBVIUB9QGFAYECAgFRhQFyhQGqAQIBUIsBJf4BMAIBCpQBJ5sBMAIBTJwBJ6MBMAIBSKQBJ6sBMAIBRKwBJ7MBMAIBQLQBJ7sBMAIBPLwBJ8MBMAIBOMQBJ9sBNQIBLtwBJ/0BLAIBC5kBVJkBcAIBT5YBVZYBXQIBTaEBUqEBYAIBSp4BU54BbAIBSakBUqkBWwIBRqYBU6YBZwIBRbEBUrEBZAIBQq4BU64BcAIBQbkBUrkBYgIBPrYBU7YBbgIBPcEBU8EBWAIBO74BVL4BZgIBOcQBwgHEAdwBAgE3ygEt2AE4AgEv3AE13AFRAgEM3gEr+AE2AgEP+wEr+wGGAQIBDssBL9YBNAIBMdcBL9cBigECATDmAS3mAdEBAgEp5wEt7QE+AgEk7gEt7gGIAgIBH+8BLe8BtgICARnwAS33AUACARDLAT3LAXYCATLNATPUATwCATPmAcQB5gHOAQIBLOYBXOYBcQIBKucBX+cBdAIBJ+oBM+oBYgIBJucB4gHnAfEBAgEl7gFi7gFmAgEj7gFx7gGGAQIBIe4B9gHuAYUCAgEg7wFi7wGTAQIBHe8BngHvAbMBAgEb7wGkAu8BswICARrwAcoH8AHhBwIBGPABvwfwAcYHAgEX8AHHAfABmwUCARbwAZkH8AG0BwIBFfABvwXwAdYFAgEU8AHbBvAB4AYCARPwAYAH8AGQBwIBEvABswbwAcgGAgER0gFf0gFjAgE2zwFgzwFyAgE0</sads:DebugSymbol.Symbol>
  </Flowchart>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="GetImapMail_1" sap:VirtualizedContainerService.HintSize="200,22.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CreateDataTable_2" sap:VirtualizedContainerService.HintSize="200,52.8" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="582.4,60" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="582.4,60" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="582.4,64" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="582.4,60" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="582.4,60" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="552,60" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="552,60" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="552,60" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="552,60" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="552,60" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="552,60" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="240,60" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="460.8,209.6" />
      <sap2010:ViewStateData Id="BookmarkBreak_3" sap:VirtualizedContainerService.HintSize="460.8,22.4" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="480,364.8" />
      <sap2010:ViewStateData Id="ForEach`1_3" sap:VirtualizedContainerService.HintSize="552,499.2" />
      <sap2010:ViewStateData Id="AddRow_1" sap:VirtualizedContainerService.HintSize="311.2,22.4" />
      <sap2010:ViewStateData Id="ReadRange_1" sap:VirtualizedContainerService.HintSize="311.2,60" />
      <sap2010:ViewStateData Id="WriteRange_2" sap:VirtualizedContainerService.HintSize="311.2,88" />
      <sap2010:ViewStateData Id="WriteRange_1" sap:VirtualizedContainerService.HintSize="311.2,88" />
      <sap2010:ViewStateData Id="SendSMTPMail_2" sap:VirtualizedContainerService.HintSize="311.2,223.2" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="330.4,734.4" />
      <sap2010:ViewStateData Id="BookmarkBreak_4" sap:VirtualizedContainerService.HintSize="200,22.4" />
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="552,884" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="571.2,2116" />
      <sap2010:ViewStateData Id="UsingExcelScope_1" sap:VirtualizedContainerService.HintSize="582.4,2225.6" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="601.6,2822.4" />
      <sap2010:ViewStateData Id="BookmarkBreak_2" sap:VirtualizedContainerService.HintSize="200,22.4" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="823.2,2972" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="842.4,3064.8" />
      <sap2010:ViewStateData Id="ForEach`1_2" sap:VirtualizedContainerService.HintSize="855.2,3199.2" />
      <sap2010:ViewStateData Id="FlowStep_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,323.6</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,213.6</av:Point>
            <av:Size x:Key="ShapeSize">200,52.8</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,266.4 300,323.6</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,127.7</av:Point>
            <av:Size x:Key="ShapeSize">200,22.4</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,150.1 300,213.6</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="611.2,636.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75.2</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,77.7 300,127.7</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TruBotDesigner.Workflow_1" sap:VirtualizedContainerService.HintSize="651.2,716.8" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>